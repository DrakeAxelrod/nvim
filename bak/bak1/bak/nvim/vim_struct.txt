{
  F = {
    if_nil = <function 1>,
    nil_wrap = <function 2>,
    npcall = <function 3>,
    ok_or_nil = <function 4>,
    pack_len = <function 5>,
    unpack_len = <function 6>
  },
  NIL = vim.NIL,
  _create_ts_parser = <function 7>,
  _cs_remote = <function 8>,
  _empty_dict_mt = {
    __tostring = <function 9>
  },
  _expand_pat = <function 10>,
  _expand_pat_get_parts = <function 11>,
  _getvar = <function 12>,
  _init_default_mappings = <function 13>,
  _load_package = <function 14>,
  _on_key = <function 15>,
  _os_proc_children = <function 16>,
  _os_proc_info = <function 17>,
  _setvar = <function 18>,
  _so_trails = { "/?.so" },
  _submodules = {
    F = true,
    diagnostic = true,
    filetype = true,
    fs = true,
    health = true,
    highlight = true,
    inspect = true,
    keymap = true,
    lsp = true,
    treesitter = true,
    ui = true
  },
  _system = <function 19>,
  _ts_add_language = <function 20>,
  _ts_get_language_version = <function 21>,
  _ts_get_minimum_language_version = <function 22>,
  _ts_has_language = <function 23>,
  _ts_inspect_language = <function 24>,
  _ts_parse_query = <function 25>,
  _ts_remove_language = <function 26>,
  api = {
    nvim__buf_redraw_range = <function 27>,
    nvim__buf_stats = <function 28>,
    nvim__get_hl_defs = <function 29>,
    nvim__get_lib_dir = <function 30>,
    nvim__get_runtime = <function 31>,
    nvim__id = <function 32>,
    nvim__id_array = <function 33>,
    nvim__id_dictionary = <function 34>,
    nvim__id_float = <function 35>,
    nvim__inspect_cell = <function 36>,
    nvim__runtime_inspect = <function 37>,
    nvim__screenshot = <function 38>,
    nvim__stats = <function 39>,
    nvim__unpack = <function 40>,
    nvim_buf_add_highlight = <function 41>,
    nvim_buf_attach = <function 42>,
    nvim_buf_call = <function 43>,
    nvim_buf_clear_highlight = <function 44>,
    nvim_buf_clear_namespace = <function 45>,
    nvim_buf_create_user_command = <function 46>,
    nvim_buf_del_extmark = <function 47>,
    nvim_buf_del_keymap = <function 48>,
    nvim_buf_del_mark = <function 49>,
    nvim_buf_del_user_command = <function 50>,
    nvim_buf_del_var = <function 51>,
    nvim_buf_delete = <function 52>,
    nvim_buf_get_changedtick = <function 53>,
    nvim_buf_get_commands = <function 54>,
    nvim_buf_get_extmark_by_id = <function 55>,
    nvim_buf_get_extmarks = <function 56>,
    nvim_buf_get_keymap = <function 57>,
    nvim_buf_get_lines = <function 58>,
    nvim_buf_get_mark = <function 59>,
    nvim_buf_get_name = <function 60>,
    nvim_buf_get_number = <function 61>,
    nvim_buf_get_offset = <function 62>,
    nvim_buf_get_option = <function 63>,
    nvim_buf_get_text = <function 64>,
    nvim_buf_get_var = <function 65>,
    nvim_buf_is_loaded = <function 66>,
    nvim_buf_is_valid = <function 67>,
    nvim_buf_line_count = <function 68>,
    nvim_buf_set_extmark = <function 69>,
    nvim_buf_set_keymap = <function 70>,
    nvim_buf_set_lines = <function 71>,
    nvim_buf_set_mark = <function 72>,
    nvim_buf_set_name = <function 73>,
    nvim_buf_set_option = <function 74>,
    nvim_buf_set_text = <function 75>,
    nvim_buf_set_var = <function 76>,
    nvim_buf_set_virtual_text = <function 77>,
    nvim_call_dict_function = <function 78>,
    nvim_call_function = <function 79>,
    nvim_chan_send = <function 80>,
    nvim_clear_autocmds = <function 81>,
    nvim_cmd = <function 82>,
    nvim_command = <function 83>,
    nvim_command_output = <function 84>,
    nvim_create_augroup = <function 85>,
    nvim_create_autocmd = <function 86>,
    nvim_create_buf = <function 87>,
    nvim_create_namespace = <function 88>,
    nvim_create_user_command = <function 89>,
    nvim_del_augroup_by_id = <function 90>,
    nvim_del_augroup_by_name = <function 91>,
    nvim_del_autocmd = <function 92>,
    nvim_del_current_line = <function 93>,
    nvim_del_keymap = <function 94>,
    nvim_del_mark = <function 95>,
    nvim_del_user_command = <function 96>,
    nvim_del_var = <function 97>,
    nvim_echo = <function 98>,
    nvim_err_write = <function 99>,
    nvim_err_writeln = <function 100>,
    nvim_eval = <function 101>,
    nvim_eval_statusline = <function 102>,
    nvim_exec = <function 103>,
    nvim_exec_autocmds = <function 104>,
    nvim_feedkeys = <function 105>,
    nvim_get_all_options_info = <function 106>,
    nvim_get_autocmds = <function 107>,
    nvim_get_chan_info = <function 108>,
    nvim_get_color_by_name = <function 109>,
    nvim_get_color_map = <function 110>,
    nvim_get_commands = <function 111>,
    nvim_get_context = <function 112>,
    nvim_get_current_buf = <function 113>,
    nvim_get_current_line = <function 114>,
    nvim_get_current_tabpage = <function 115>,
    nvim_get_current_win = <function 116>,
    nvim_get_hl_by_id = <function 117>,
    nvim_get_hl_by_name = <function 118>,
    nvim_get_hl_id_by_name = <function 119>,
    nvim_get_keymap = <function 120>,
    nvim_get_mark = <function 121>,
    nvim_get_mode = <function 122>,
    nvim_get_namespaces = <function 123>,
    nvim_get_option = <function 124>,
    nvim_get_option_info = <function 125>,
    nvim_get_option_value = <function 126>,
    nvim_get_proc = <function 127>,
    nvim_get_proc_children = <function 128>,
    nvim_get_runtime_file = <function 129>,
    nvim_get_var = <function 130>,
    nvim_get_vvar = <function 131>,
    nvim_input = <function 132>,
    nvim_input_mouse = <function 133>,
    nvim_list_bufs = <function 134>,
    nvim_list_chans = <function 135>,
    nvim_list_runtime_paths = <function 136>,
    nvim_list_tabpages = <function 137>,
    nvim_list_uis = <function 138>,
    nvim_list_wins = <function 139>,
    nvim_load_context = <function 140>,
    nvim_notify = <function 141>,
    nvim_open_term = <function 142>,
    nvim_open_win = <function 143>,
    nvim_out_write = <function 144>,
    nvim_parse_cmd = <function 145>,
    nvim_parse_expression = <function 146>,
    nvim_paste = <function 147>,
    nvim_put = <function 148>,
    nvim_replace_termcodes = <function 149>,
    nvim_select_popupmenu_item = <function 150>,
    nvim_set_current_buf = <function 151>,
    nvim_set_current_dir = <function 152>,
    nvim_set_current_line = <function 153>,
    nvim_set_current_tabpage = <function 154>,
    nvim_set_current_win = <function 155>,
    nvim_set_decoration_provider = <function 156>,
    nvim_set_hl = <function 157>,
    nvim_set_hl_ns = <function 158>,
    nvim_set_hl_ns_fast = <function 159>,
    nvim_set_keymap = <function 160>,
    nvim_set_option = <function 161>,
    nvim_set_option_value = <function 162>,
    nvim_set_var = <function 163>,
    nvim_set_vvar = <function 164>,
    nvim_strwidth = <function 165>,
    nvim_tabpage_del_var = <function 166>,
    nvim_tabpage_get_number = <function 167>,
    nvim_tabpage_get_var = <function 168>,
    nvim_tabpage_get_win = <function 169>,
    nvim_tabpage_is_valid = <function 170>,
    nvim_tabpage_list_wins = <function 171>,
    nvim_tabpage_set_var = <function 172>,
    nvim_win_call = <function 173>,
    nvim_win_close = <function 174>,
    nvim_win_del_var = <function 175>,
    nvim_win_get_buf = <function 176>,
    nvim_win_get_config = <function 177>,
    nvim_win_get_cursor = <function 178>,
    nvim_win_get_height = <function 179>,
    nvim_win_get_number = <function 180>,
    nvim_win_get_option = <function 181>,
    nvim_win_get_position = <function 182>,
    nvim_win_get_tabpage = <function 183>,
    nvim_win_get_var = <function 184>,
    nvim_win_get_width = <function 185>,
    nvim_win_hide = <function 186>,
    nvim_win_is_valid = <function 187>,
    nvim_win_set_buf = <function 188>,
    nvim_win_set_config = <function 189>,
    nvim_win_set_cursor = <function 190>,
    nvim_win_set_height = <function 191>,
    nvim_win_set_hl_ns = <function 192>,
    nvim_win_set_option = <function 193>,
    nvim_win_set_var = <function 194>,
    nvim_win_set_width = <function 195>
  },
  b = {
    <metatable> = {
      __index = <function 196>,
      __newindex = <function 197>
    }
  },
  bo = {
    <metatable> = {
      __index = <function 198>,
      __newindex = <function 199>
    }
  },
  call = <function 200>,
  cmd = {
    <metatable> = {
      __call = <function 201>,
      __index = <function 202>
    }
  },
  deep_equal = <function 203>,
  deepcopy = <function 204>,
  defaulttable = <function 205>,
  defer_fn = <function 206>,
  deprecate = <function 207>,
  diagnostic = {
    _execute_scheduled_display = <function 208>,
    _get_virt_text_chunks = <function 209>,
    config = <function 210>,
    disable = <function 211>,
    enable = <function 212>,
    fromqflist = <function 213>,
    get = <function 214>,
    get_namespace = <function 215>,
    get_namespaces = <function 216>,
    get_next = <function 217>,
    get_next_pos = <function 218>,
    get_prev = <function 219>,
    get_prev_pos = <function 220>,
    goto_next = <function 221>,
    goto_prev = <function 222>,
    handlers = {
      signs = {
        hide = <function 223>,
        show = <function 224>
      },
      underline = {
        hide = <function 225>,
        show = <function 226>
      },
      virtual_text = {
        hide = <function 227>,
        show = <function 228>
      },
      <metatable> = {
        __newindex = <function 229>
      }
    },
    hide = <function 230>,
    match = <function 231>,
    open_float = <function 232>,
    reset = <function 233>,
    set = <function 234>,
    setloclist = <function 235>,
    setqflist = <function 236>,
    severity = { "ERROR", "WARN", "INFO", "HINT",
      E = 1,
      ERROR = 1,
      HINT = 4,
      I = 3,
      INFO = 3,
      N = 4,
      W = 2,
      WARN = 2
    },
    show = <function 237>,
    toqflist = <function 238>
  },
  diff = <function 239>,
  empty_dict = <function 240>,
  endswith = <function 241>,
  env = {
    <metatable> = {
      __index = <function 242>,
      __newindex = <function 243>
    }
  },
  fn = {
    chdir = <function 244>,
    empty = <function 245>,
    environ = <function 246>,
    executable = <function 247>,
    exists = <function 248>,
    expand = <function 249>,
    extend = <function 250>,
    fnamemodify = <function 251>,
    getcwd = <function 252>,
    getenv = <function 253>,
    glob = <function 254>,
    has = <function 255>,
    hlID = <function 256>,
    hlexists = <function 257>,
    isdirectory = <function 258>,
    map = <function 259>,
    mkdir = <function 260>,
    readdir = <function 261>,
    setenv = <function 262>,
    sign_define = <function 263>,
    sign_getdefined = <function 264>,
    stdpath = <function 265>,
    synIDattr = <function 266>,
    <metatable> = {
      __index = <function 267>
    }
  },
  funcref = <function 268>,
  g = {
    <metatable> = {
      __index = <function 269>,
      __newindex = <function 270>
    }
  },
  go = {
    <metatable> = {
      __index = <function 271>,
      __newindex = <function 272>
    }
  },
  gsplit = <function 273>,
  iconv = <function 274>,
  in_fast_event = <function 275>,
  inspect = {
    KEY = inspect.KEY,
    METATABLE = inspect.METATABLE,
    _DESCRIPTION = "human-readable representations of tables",
    _LICENSE = '    MIT LICENSE\n\n    Copyright (c) 2013 Enrique García Cota\n\n    Permission is hereby granted, free of charge, to any person obtaining a\n    copy of this software and associated documentation files (the\n    "Software"), to deal in the Software without restriction, including\n    without limitation the rights to use, copy, modify, merge, publish,\n    distribute, sublicense, and/or sell copies of the Software, and to\n    permit persons to whom the Software is furnished to do so, subject to\n    the following conditions:\n\n    The above copyright notice and this permission notice shall be included\n    in all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n  ',
    _URL = "http://github.com/kikito/inspect.lua",
    _VERSION = "inspect.lua 3.1.0",
    inspect = <function 276>,
    <metatable> = {
      __call = <function 277>
    }
  },
  is_callable = <function 278>,
  is_thread = <function 279>,
  json = {
    _NAME = "cjson",
    _VERSION = "2.1.0.9",
    array_mt = {},
    decode = <function 280>,
    decode_array_with_array_mt = <function 281>,
    decode_invalid_numbers = <function 282>,
    decode_max_depth = <function 283>,
    empty_array = <userdata 1>,
    empty_array_mt = {},
    encode = <function 284>,
    encode_empty_table_as_object = <function 285>,
    encode_escape_forward_slash = <function 286>,
    encode_invalid_numbers = <function 287>,
    encode_keep_buffer = <function 288>,
    encode_max_depth = <function 289>,
    encode_number_precision = <function 290>,
    encode_sparse_array = <function 291>,
    new = <function 292>,
    null = vim.NIL
  },
  keymap = {
    del = <function 293>,
    set = <function 294>
  },
  list_extend = <function 295>,
  list_slice = <function 296>,
  log = {
    levels = {
      DEBUG = 1,
      ERROR = 4,
      INFO = 2,
      OFF = 5,
      TRACE = 0,
      WARN = 3
    }
  },
  loop = {
    accept = <function 297>,
    async_send = <function 298>,
    available_parallelism = <function 299>,
    backend_fd = <function 300>,
    backend_timeout = <function 301>,
    cancel = <function 302>,
    chdir = <function 303>,
    check_start = <function 304>,
    check_stop = <function 305>,
    close = <function 306>,
    constants = {
      AF_APPLETALK = 5,
      AF_ATMPVC = 8,
      AF_AX25 = 3,
      AF_INET = 2,
      AF_INET6 = 10,
      AF_IPX = 4,
      AF_NETLINK = 16,
      AF_PACKET = 17,
      AF_UNIX = 1,
      AF_X25 = 9,
      AI_ADDRCONFIG = 32,
      AI_ALL = 16,
      AI_NUMERICHOST = 4,
      AI_NUMERICSERV = 1024,
      AI_PASSIVE = 1,
      AI_V4MAPPED = 8,
      O_APPEND = 1024,
      O_CREAT = 64,
      O_DSYNC = 4096,
      O_EXCL = 128,
      O_NOCTTY = 256,
      O_NONBLOCK = 2048,
      O_RDONLY = 0,
      O_RDWR = 2,
      O_RSYNC = 1052672,
      O_SYNC = 1052672,
      O_TRUNC = 512,
      O_WRONLY = 1,
      SIGABRT = 6,
      SIGALRM = 14,
      SIGBUS = 7,
      SIGCHLD = 17,
      SIGCONT = 18,
      SIGFPE = 8,
      SIGHUP = 1,
      SIGILL = 4,
      SIGINT = 2,
      SIGIO = 29,
      SIGIOT = 6,
      SIGKILL = 9,
      SIGPIPE = 13,
      SIGPOLL = 29,
      SIGPROF = 27,
      SIGPWR = 30,
      SIGQUIT = 3,
      SIGSEGV = 11,
      SIGSTKFLT = 16,
      SIGSTOP = 19,
      SIGSYS = 31,
      SIGTERM = 15,
      SIGTRAP = 5,
      SIGTSTP = 20,
      SIGTTIN = 21,
      SIGTTOU = 22,
      SIGURG = 23,
      SIGUSR1 = 10,
      SIGUSR2 = 12,
      SIGVTALRM = 26,
      SIGWINCH = 28,
      SIGXCPU = 24,
      SIGXFSZ = 25,
      SOCK_DGRAM = 2,
      SOCK_RAW = 3,
      SOCK_RDM = 4,
      SOCK_SEQPACKET = 5,
      SOCK_STREAM = 1,
      TCP_IPV6ONLY = 1,
      UDP_IPV6ONLY = 1,
      UDP_MMSG_CHUNK = 8,
      UDP_MMSG_FREE = 16,
      UDP_PARTIAL = 2,
      UDP_RECVMMSG = 256,
      UDP_REUSEADDR = 4
    },
    cpu_info = <function 307>,
    cwd = <function 308>,
    disable_stdio_inheritance = <function 309>,
    exepath = <function 310>,
    fileno = <function 311>,
    fs_access = <function 312>,
    fs_chmod = <function 313>,
    fs_chown = <function 314>,
    fs_close = <function 315>,
    fs_closedir = <function 316>,
    fs_copyfile = <function 317>,
    fs_event_getpath = <function 318>,
    fs_event_start = <function 319>,
    fs_event_stop = <function 320>,
    fs_fchmod = <function 321>,
    fs_fchown = <function 322>,
    fs_fdatasync = <function 323>,
    fs_fstat = <function 324>,
    fs_fsync = <function 325>,
    fs_ftruncate = <function 326>,
    fs_futime = <function 327>,
    fs_lchown = <function 328>,
    fs_link = <function 329>,
    fs_lstat = <function 330>,
    fs_lutime = <function 331>,
    fs_mkdir = <function 332>,
    fs_mkdtemp = <function 333>,
    fs_mkstemp = <function 334>,
    fs_open = <function 335>,
    fs_opendir = <function 336>,
    fs_poll_getpath = <function 337>,
    fs_poll_start = <function 338>,
    fs_poll_stop = <function 339>,
    fs_read = <function 340>,
    fs_readdir = <function 341>,
    fs_readlink = <function 342>,
    fs_realpath = <function 343>,
    fs_rename = <function 344>,
    fs_rmdir = <function 345>,
    fs_scandir = <function 346>,
    fs_scandir_next = <function 347>,
    fs_sendfile = <function 348>,
    fs_stat = <function 349>,
    fs_statfs = <function 350>,
    fs_symlink = <function 351>,
    fs_unlink = <function 352>,
    fs_utime = <function 353>,
    fs_write = <function 354>,
    get_constrained_memory = <function 355>,
    get_free_memory = <function 356>,
    get_process_title = <function 357>,
    get_total_memory = <function 358>,
    getaddrinfo = <function 359>,
    getgid = <function 360>,
    getnameinfo = <function 361>,
    getpid = <function 362>,
    getrusage = <function 363>,
    gettimeofday = <function 364>,
    getuid = <function 365>,
    guess_handle = <function 366>,
    handle_get_type = <function 367>,
    has_ref = <function 368>,
    hrtime = <function 369>,
    idle_start = <function 370>,
    idle_stop = <function 371>,
    if_indextoiid = <function 372>,
    if_indextoname = <function 373>,
    interface_addresses = <function 374>,
    is_active = <function 375>,
    is_closing = <function 376>,
    is_readable = <function 377>,
    is_writable = <function 378>,
    kill = <function 379>,
    listen = <function 380>,
    loadavg = <function 381>,
    loop_alive = <function 382>,
    loop_close = <function 383>,
    loop_configure = <function 384>,
    loop_mode = <function 385>,
    metrics_idle_time = <function 386>,
    new_async = <function 387>,
    new_check = <function 388>,
    new_fs_event = <function 389>,
    new_fs_poll = <function 390>,
    new_idle = <function 391>,
    new_pipe = <function 392>,
    new_poll = <function 393>,
    new_prepare = <function 394>,
    new_signal = <function 395>,
    new_socket_poll = <function 396>,
    new_tcp = <function 397>,
    new_thread = <function 398>,
    new_timer = <function 399>,
    new_tty = <function 400>,
    new_udp = <function 401>,
    new_work = <function 402>,
    now = <function 403>,
    os_environ = <function 404>,
    os_get_passwd = <function 405>,
    os_getenv = <function 406>,
    os_gethostname = <function 407>,
    os_getpid = <function 408>,
    os_getppid = <function 409>,
    os_getpriority = <function 410>,
    os_homedir = <function 411>,
    os_setenv = <function 412>,
    os_setpriority = <function 413>,
    os_tmpdir = <function 414>,
    os_uname = <function 415>,
    os_unsetenv = <function 416>,
    pipe = <function 417>,
    pipe_bind = <function 418>,
    pipe_chmod = <function 419>,
    pipe_connect = <function 420>,
    pipe_getpeername = <function 421>,
    pipe_getsockname = <function 422>,
    pipe_open = <function 423>,
    pipe_pending_count = <function 424>,
    pipe_pending_instances = <function 425>,
    pipe_pending_type = <function 426>,
    poll_start = <function 427>,
    poll_stop = <function 428>,
    prepare_start = <function 429>,
    prepare_stop = <function 430>,
    print_active_handles = <function 431>,
    print_all_handles = <function 432>,
    process_get_pid = <function 433>,
    process_kill = <function 434>,
    queue_work = <function 435>,
    random = <function 436>,
    read_start = <function 437>,
    read_stop = <function 438>,
    recv_buffer_size = <function 439>,
    ref = <function 440>,
    req_get_type = <function 441>,
    resident_set_memory = <function 442>,
    run = <function 443>,
    send_buffer_size = <function 444>,
    set_process_title = <function 445>,
    setgid = <function 446>,
    setuid = <function 447>,
    shutdown = <function 448>,
    signal_start = <function 449>,
    signal_start_oneshot = <function 450>,
    signal_stop = <function 451>,
    sleep = <function 452>,
    socketpair = <function 453>,
    spawn = <function 454>,
    stop = <function 455>,
    stream_get_write_queue_size = <function 456>,
    stream_set_blocking = <function 457>,
    tcp_bind = <function 458>,
    tcp_close_reset = <function 459>,
    tcp_connect = <function 460>,
    tcp_getpeername = <function 461>,
    tcp_getsockname = <function 462>,
    tcp_keepalive = <function 463>,
    tcp_nodelay = <function 464>,
    tcp_open = <function 465>,
    tcp_simultaneous_accepts = <function 466>,
    tcp_write_queue_size = <function 467>,
    thread_equal = <function 468>,
    thread_join = <function 469>,
    thread_self = <function 470>,
    timer_again = <function 471>,
    timer_get_due_in = <function 472>,
    timer_get_repeat = <function 473>,
    timer_set_repeat = <function 474>,
    timer_start = <function 475>,
    timer_stop = <function 476>,
    translate_sys_error = <function 477>,
    try_write = <function 478>,
    try_write2 = <function 479>,
    tty_get_vterm_state = <function 480>,
    tty_get_winsize = <function 481>,
    tty_reset_mode = <function 482>,
    tty_set_mode = <function 483>,
    tty_set_vterm_state = <function 484>,
    udp_bind = <function 485>,
    udp_connect = <function 486>,
    udp_get_send_queue_count = <function 487>,
    udp_get_send_queue_size = <function 488>,
    udp_getpeername = <function 489>,
    udp_getsockname = <function 490>,
    udp_open = <function 491>,
    udp_recv_start = <function 492>,
    udp_recv_stop = <function 493>,
    udp_send = <function 494>,
    udp_set_broadcast = <function 495>,
    udp_set_membership = <function 496>,
    udp_set_multicast_interface = <function 497>,
    udp_set_multicast_loop = <function 498>,
    udp_set_multicast_ttl = <function 499>,
    udp_set_source_membership = <function 500>,
    udp_set_ttl = <function 501>,
    udp_try_send = <function 502>,
    unref = <function 503>,
    update_time = <function 504>,
    uptime = <function 505>,
    version = <function 506>,
    version_string = <function 507>,
    walk = <function 508>,
    write = <function 509>,
    write2 = <function 510>
  },
  lsp = {
    _cmd_parts = <function 511>,
    _request_name_to_capability = {
      ["codeLens/resolve"] = { "codeLensProvider", "resolveProvider" },
      ["textDocument/codeAction"] = { "codeActionProvider" },
      ["textDocument/codeLens"] = { "codeLensProvider" },
      ["textDocument/completion"] = { "completionProvider" },
      ["textDocument/declaration"] = { "declarationProvider" },
      ["textDocument/definition"] = { "definitionProvider" },
      ["textDocument/documentHighlight"] = { "documentHighlightProvider" },
      ["textDocument/documentSymbol"] = { "documentSymbolProvider" },
      ["textDocument/formatting"] = { "documentFormattingProvider" },
      ["textDocument/hover"] = { "hoverProvider" },
      ["textDocument/implementation"] = { "implementationProvider" },
      ["textDocument/prepareCallHierarchy"] = { "callHierarchyProvider" },
      ["textDocument/prepareRename"] = { "renameProvider", "prepareProvider" },
      ["textDocument/rangeFormatting"] = { "documentRangeFormattingProvider" },
      ["textDocument/references"] = { "referencesProvider" },
      ["textDocument/rename"] = { "renameProvider" },
      ["textDocument/signatureHelp"] = { "signatureHelpProvider" },
      ["textDocument/typeDefinition"] = { "typeDefinitionProvider" },
      ["workspace/executeCommand"] = { "executeCommandProvider" },
      ["workspace/symbol"] = { "workspaceSymbolProvider" }
    },
    _unsupported_method = <function 512>,
    _with_extend = <function 513>,
    buf = {
      add_workspace_folder = <function 514>,
      clear_references = <function 515>,
      code_action = <function 516>,
      completion = <function 517>,
      declaration = <function 518>,
      definition = <function 519>,
      document_highlight = <function 520>,
      document_symbol = <function 521>,
      execute_command = <function 522>,
      format = <function 523>,
      formatting = <function 524>,
      formatting_seq_sync = <function 525>,
      formatting_sync = <function 526>,
      hover = <function 527>,
      implementation = <function 528>,
      incoming_calls = <function 529>,
      list_workspace_folders = <function 530>,
      outgoing_calls = <function 531>,
      range_code_action = <function 532>,
      range_formatting = <function 533>,
      references = <function 534>,
      remove_workspace_folder = <function 535>,
      rename = <function 536>,
      server_ready = <function 537>,
      signature_help = <function 538>,
      type_definition = <function 539>,
      workspace_symbol = <function 540>
    },
    buf_attach_client = <function 541>,
    buf_detach_client = <function 542>,
    buf_get_clients = <function 543>,
    buf_is_attached = <function 544>,
    buf_notify = <function 545>,
    buf_request = <function 546>,
    buf_request_all = <function 547>,
    buf_request_sync = <function 548>,
    client = <function 549>,
    client_errors = { "INVALID_SERVER_MESSAGE", "INVALID_SERVER_JSON", "NO_RESULT_CALLBACK_FOUND", "READ_ERROR", "NOTIFICATION_HANDLER_ERROR", "SERVER_REQUEST_HANDLER_ERROR", "SERVER_RESULT_CALLBACK_ERROR", "ON_INIT_CALLBACK_ERROR",
      INVALID_SERVER_JSON = 2,
      INVALID_SERVER_MESSAGE = 1,
      NOTIFICATION_HANDLER_ERROR = 5,
      NO_RESULT_CALLBACK_FOUND = 3,
      ON_INIT_CALLBACK_ERROR = 8,
      READ_ERROR = 4,
      SERVER_REQUEST_HANDLER_ERROR = 6,
      SERVER_RESULT_CALLBACK_ERROR = 7
    },
    client_is_stopped = <function 550>,
    codelens = {
      __namespaces = {
        <metatable> = {
          __index = <function 551>
        }
      },
      display = <function 552>,
      get = <function 553>,
      on_codelens = <function 554>,
      refresh = <function 555>,
      run = <function 556>,
      save = <function 557>
    },
    commands = {
      <metatable> = {
        __newindex = <function 558>
      }
    },
    diagnostic = {
      get_line_diagnostics = <function 559>,
      get_namespace = <function 560>,
      on_publish_diagnostics = <function 561>,
      reset = <function 562>
    },
    for_each_buffer_client = <function 563>,
    formatexpr = <function 564>,
    get_active_clients = <function 565>,
    get_buffers_by_client_id = <function 566>,
    get_client_by_id = <function 567>,
    get_log_path = <function 568>,
    handlers = {
      ["$/progress"] = <function 569>,
      ["callHierarchy/incomingCalls"] = <function 570>,
      ["callHierarchy/outgoingCalls"] = <function 571>,
      ["client/registerCapability"] = <function 572>,
      hover = <function 573>,
      signature_help = <function 574>,
      ["textDocument/codeLens"] = <function 575>,
      ["textDocument/completion"] = <function 576>,
      ["textDocument/declaration"] = <function 577>,
      ["textDocument/definition"] = <function 578>,
      ["textDocument/documentHighlight"] = <function 579>,
      ["textDocument/documentSymbol"] = <function 580>,
      ["textDocument/formatting"] = <function 581>,
      ["textDocument/hover"] = <function 582>,
      ["textDocument/implementation"] = <function 583>,
      ["textDocument/publishDiagnostics"] = <function 584>,
      ["textDocument/rangeFormatting"] = <function 585>,
      ["textDocument/references"] = <function 586>,
      ["textDocument/rename"] = <function 587>,
      ["textDocument/signatureHelp"] = <function 588>,
      ["textDocument/typeDefinition"] = <function 589>,
      ["window/logMessage"] = <function 590>,
      ["window/showMessage"] = <function 591>,
      ["window/showMessageRequest"] = <function 592>,
      ["window/workDoneProgress/create"] = <function 593>,
      ["workspace/applyEdit"] = <function 594>,
      ["workspace/configuration"] = <function 595>,
      ["workspace/executeCommand"] = <function 596>,
      ["workspace/symbol"] = <function 597>,
      ["workspace/workspaceFolders"] = <function 598>
    },
    log_levels = { "DEBUG", "INFO", "WARN", "ERROR", "OFF",
      [0] = "TRACE",
      DEBUG = 1,
      ERROR = 4,
      INFO = 2,
      OFF = 5,
      TRACE = 0,
      WARN = 3
    },
    omnifunc = <function 599>,
    protocol = {
      CodeActionKind = {
        [""] = "Empty",
        Empty = "",
        QuickFix = "quickfix",
        Refactor = "refactor",
        RefactorExtract = "refactor.extract",
        RefactorInline = "refactor.inline",
        RefactorRewrite = "refactor.rewrite",
        Source = "source",
        SourceOrganizeImports = "source.organizeImports",
        quickfix = "QuickFix",
        refactor = "Refactor",
        ["refactor.extract"] = "RefactorExtract",
        ["refactor.inline"] = "RefactorInline",
        ["refactor.rewrite"] = "RefactorRewrite",
        source = "Source",
        ["source.organizeImports"] = "SourceOrganizeImports"
      },
      CompletionItemKind = { "Text", "Method", "Function", "Constructor", "Field", "Variable", "Class", "Interface", "Module", "Property", "Unit", "Value", "Enum", "Keyword", "Snippet", "Color", "File", "Reference", "Folder", "EnumMember", "Constant", "Struct", "Event", "Operator", "TypeParameter",
        Class = 7,
        Color = 16,
        Constant = 21,
        Constructor = 4,
        Enum = 13,
        EnumMember = 20,
        Event = 23,
        Field = 5,
        File = 17,
        Folder = 19,
        Function = 3,
        Interface = 8,
        Keyword = 14,
        Method = 2,
        Module = 9,
        Operator = 24,
        Property = 10,
        Reference = 18,
        Snippet = 15,
        Struct = 22,
        Text = 1,
        TypeParameter = 25,
        Unit = 11,
        Value = 12,
        Variable = 6
      },
      CompletionTriggerKind = { "Invoked", "TriggerCharacter", "TriggerForIncompleteCompletions",
        Invoked = 1,
        TriggerCharacter = 2,
        TriggerForIncompleteCompletions = 3
      },
      DiagnosticSeverity = { "Error", "Warning", "Information", "Hint",
        Error = 1,
        Hint = 4,
        Information = 3,
        Warning = 2
      },
      DiagnosticTag = { "Unnecessary", "Deprecated",
        Deprecated = 2,
        Unnecessary = 1
      },
      DocumentHighlightKind = { "Text", "Read", "Write",
        Read = 2,
        Text = 1,
        Write = 3
      },
      ErrorCodes = {
        [-32801] = "ContentModified",
        [-32800] = "RequestCancelled",
        [-32700] = "ParseError",
        [-32603] = "InternalError",
        [-32602] = "InvalidParams",
        [-32601] = "MethodNotFound",
        [-32600] = "InvalidRequest",
        [-32099] = "serverErrorStart",
        [-32002] = "ServerNotInitialized",
        [-32001] = "UnknownErrorCode",
        [-32000] = "serverErrorEnd",
        ContentModified = -32801,
        InternalError = -32603,
        InvalidParams = -32602,
        InvalidRequest = -32600,
        MethodNotFound = -32601,
        ParseError = -32700,
        RequestCancelled = -32800,
        ServerNotInitialized = -32002,
        UnknownErrorCode = -32001,
        serverErrorEnd = -32000,
        serverErrorStart = -32099
      },
      FailureHandlingKind = {
        Abort = "abort",
        TextOnlyTransactional = "textOnlyTransactional",
        Transactional = "transactional",
        Undo = "undo",
        abort = "Abort",
        textOnlyTransactional = "TextOnlyTransactional",
        transactional = "Transactional",
        undo = "Undo"
      },
      FileChangeType = { "Created", "Changed", "Deleted",
        Changed = 2,
        Created = 1,
        Deleted = 3
      },
      InitializeError = { "unknownProtocolVersion",
        unknownProtocolVersion = 1
      },
      InsertTextFormat = { "PlainText", "Snippet",
        PlainText = 1,
        Snippet = 2
      },
      MarkupKind = {
        Markdown = "markdown",
        PlainText = "plaintext",
        markdown = "Markdown",
        plaintext = "PlainText"
      },
      MessageType = { "Error", "Warning", "Info", "Log",
        Error = 1,
        Info = 3,
        Log = 4,
        Warning = 2
      },
      ResourceOperationKind = {
        Create = "create",
        Delete = "delete",
        Rename = "rename",
        create = "Create",
        delete = "Delete",
        rename = "Rename"
      },
      SymbolKind = { "File", "Module", "Namespace", "Package", "Class", "Method", "Property", "Field", "Constructor", "Enum", "Interface", "Function", "Variable", "Constant", "String", "Number", "Boolean", "Array", "Object", "Key", "Null", "EnumMember", "Struct", "Event", "Operator", "TypeParameter",
        Array = 18,
        Boolean = 17,
        Class = 5,
        Constant = 14,
        Constructor = 9,
        Enum = 10,
        EnumMember = 22,
        Event = 24,
        Field = 8,
        File = 1,
        Function = 12,
        Interface = 11,
        Key = 20,
        Method = 6,
        Module = 2,
        Namespace = 3,
        Null = 21,
        Number = 16,
        Object = 19,
        Operator = 25,
        Package = 4,
        Property = 7,
        String = 15,
        Struct = 23,
        TypeParameter = 26,
        Variable = 13
      },
      TextDocumentSaveReason = { "Manual", "AfterDelay", "FocusOut",
        AfterDelay = 2,
        FocusOut = 3,
        Manual = 1
      },
      TextDocumentSyncKind = { "Full", "Incremental",
        [0] = "None",
        Full = 1,
        Incremental = 2,
        None = 0
      },
      WatchKind = { "Create", "Change",
        [4] = "Delete",
        Change = 2,
        Create = 1,
        Delete = 4
      },
      _resolve_capabilities_compat = <function 600>,
      make_client_capabilities = <function 601>,
      resolve_capabilities = <function 602>
    },
    rpc = {
      client_errors = { "INVALID_SERVER_MESSAGE", "INVALID_SERVER_JSON", "NO_RESULT_CALLBACK_FOUND", "READ_ERROR", "NOTIFICATION_HANDLER_ERROR", "SERVER_REQUEST_HANDLER_ERROR", "SERVER_RESULT_CALLBACK_ERROR",
        INVALID_SERVER_JSON = 2,
        INVALID_SERVER_MESSAGE = 1,
        NOTIFICATION_HANDLER_ERROR = 5,
        NO_RESULT_CALLBACK_FOUND = 3,
        READ_ERROR = 4,
        SERVER_REQUEST_HANDLER_ERROR = 6,
        SERVER_RESULT_CALLBACK_ERROR = 7
      },
      connect = <function 603>,
      create_read_loop = <function 604>,
      format_rpc_error = <function 605>,
      rpc_response_error = <function 606>,
      start = <function 607>
    },
    rpc_response_error = <function 606>,
    set_log_level = <function 608>,
    start = <function 609>,
    start_client = <function 610>,
    stop_client = <function 611>,
    tagfunc = <function 612>,
    util = {
      _get_completion_item_kind_name = <function 613>,
      _get_line_byte_from_position = <function 614>,
      _get_offset_encoding = <function 615>,
      _get_symbol_kind_name = <function 616>,
      _make_floating_popup_size = <function 617>,
      _str_byteindex_enc = <function 618>,
      _str_utfindex_enc = <function 619>,
      _trim = <function 620>,
      apply_text_document_edit = <function 621>,
      apply_text_edits = <function 622>,
      apply_workspace_edit = <function 623>,
      buf_clear_references = <function 624>,
      buf_highlight_references = <function 625>,
      buf_versions = {},
      character_offset = <function 626>,
      convert_input_to_markdown_lines = <function 627>,
      convert_signature_help_to_markdown_lines = <function 628>,
      extract_completion_items = <function 629>,
      get_effective_tabstop = <function 630>,
      get_progress_messages = <function 631>,
      jump_to_location = <function 632>,
      locations_to_items = <function 633>,
      lookup_section = <function 634>,
      make_floating_popup_options = <function 635>,
      make_formatting_params = <function 636>,
      make_given_range_params = <function 637>,
      make_position_params = <function 638>,
      make_range_params = <function 639>,
      make_text_document_params = <function 640>,
      make_workspace_params = <function 641>,
      open_floating_preview = <function 642>,
      parse_snippet = <function 643>,
      preview_location = <function 644>,
      rename = <function 645>,
      set_lines = <function 646>,
      stylize_markdown = <function 647>,
      symbols_to_items = <function 648>,
      text_document_completion_list_to_complete_items = <function 649>,
      trim_empty_lines = <function 650>,
      try_trim_markdown_code_blocks = <function 651>
    },
    with = <function 652>
  },
  mpack = {
    NIL = vim.NIL,
    Packer = <function 653>,
    Session = <function 654>,
    Unpacker = <function 655>,
    decode = <function 656>,
    encode = <function 657>
  },
  notify = {
    _config = <function 658>,
    _print_history = <function 659>,
    async = <function 660>,
    dismiss = <function 661>,
    history = <function 662>,
    instance = <function 663>,
    notify = <function 664>,
    open = <function 665>,
    pending = <function 666>,
    setup = <function 667>,
    <metatable> = {
      __call = <function 668>
    }
  },
  notify_once = <function 669>,
  o = {
    <metatable> = {
      __index = <function 670>,
      __newindex = <function 671>
    }
  },
  on_key = <function 672>,
  opt = {
    <metatable> = {
      __index = <function 673>,
      __newindex = <function 674>
    }
  },
  opt_global = {
    <metatable> = {
      __index = <function 675>,
      __newindex = <function 676>
    }
  },
  opt_local = {
    <metatable> = {
      __index = <function 677>,
      __newindex = <function 678>
    }
  },
  paste = <function 679>,
  pesc = <function 680>,
  pretty_print = <function 681>,
  regex = <function 682>,
  region = <function 683>,
  register_keystroke_callback = <function 684>,
  rpcnotify = <function 685>,
  rpcrequest = <function 686>,
  schedule = <function 687>,
  schedule_wrap = <function 688>,
  spell = {
    check = <function 689>
  },
  split = <function 690>,
  startswith = <function 691>,
  str_byteindex = <function 692>,
  str_utf_end = <function 693>,
  str_utf_pos = <function 694>,
  str_utf_start = <function 695>,
  str_utfindex = <function 696>,
  stricmp = <function 697>,
  t = {
    <metatable> = {
      __index = <function 698>,
      __newindex = <function 699>
    }
  },
  tbl_add_reverse_lookup = <function 700>,
  tbl_contains = <function 701>,
  tbl_count = <function 702>,
  tbl_deep_extend = <function 703>,
  tbl_extend = <function 704>,
  tbl_filter = <function 705>,
  tbl_flatten = <function 706>,
  tbl_get = <function 707>,
  tbl_isempty = <function 708>,
  tbl_islist = <function 709>,
  tbl_keys = <function 710>,
  tbl_map = <function 711>,
  tbl_values = <function 712>,
  treesitter = {
    _create_parser = <function 713>,
    add_directive = <function 714>,
    add_predicate = <function 715>,
    get_captures_at_cursor = <function 716>,
    get_captures_at_pos = <function 717>,
    get_node_at_cursor = <function 718>,
    get_node_at_pos = <function 719>,
    get_node_range = <function 720>,
    get_node_text = <function 721>,
    get_parser = <function 722>,
    get_query = <function 723>,
    get_query_files = <function 724>,
    get_string_parser = <function 725>,
    inspect_language = <function 726>,
    is_ancestor = <function 727>,
    is_in_node_range = <function 728>,
    language_version = 14,
    list_directives = <function 729>,
    list_predicates = <function 730>,
    minimum_language_version = 13,
    node_contains = <function 731>,
    parse_query = <function 732>,
    query = {
      add_directive = <function 714>,
      add_predicate = <function 715>,
      get_node_text = <function 721>,
      get_query = <function 723>,
      get_query_files = <function 724>,
      list_directives = <function 729>,
      list_predicates = <function 730>,
      parse_query = <function 732>,
      set_query = <function 733>
    },
    require_language = <function 734>,
    set_query = <function 733>,
    start = <function 735>,
    stop = <function 736>,
    <metatable> = {
      __index = <function 737>
    }
  },
  trim = <function 738>,
  type_idx = true,
  types = {
    [3] = "float",
    [5] = "array",
    [6] = "dictionary",
    array = 5,
    dictionary = 6,
    float = 3
  },
  ui = {
    input = <function 739>,
    select = <function 740>
  },
  ui_attach = <function 741>,
  ui_detach = <function 742>,
  v = {
    <metatable> = {
      __index = <function 743>,
      __newindex = <function 744>
    }
  },
  val_idx = false,
  validate = <function 745>,
  version = <function 746>,
  w = {
    <metatable> = {
      __index = <function 747>,
      __newindex = <function 748>
    }
  },
  wait = <function 749>,
  wo = {
    <metatable> = {
      __index = <function 750>,
      __newindex = <function 751>
    }
  },
  <metatable> = {
    __index = <function 752>
  }
}